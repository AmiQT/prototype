rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Showcase Images Rules
    match /showcase_images/{imageId} {
      // Allow read if user is authenticated
      allow read: if request.auth != null;
      
      // Allow write if user is authenticated and follows naming convention
      allow write: if request.auth != null && 
        imageId.matches('.*_' + request.auth.uid + '_.*') &&
        request.resource.size < 10 * 1024 * 1024 && // 10MB limit
        request.resource.contentType.matches('image/.*');
      
      // Allow delete if user owns the file
      allow delete: if request.auth != null && 
        imageId.matches('.*_' + request.auth.uid + '_.*');
    }
    
    // Showcase Videos Rules
    match /showcase_videos/{videoId} {
      // Allow read if user is authenticated
      allow read: if request.auth != null;
      
      // Allow write if user is authenticated and follows naming convention
      allow write: if request.auth != null && 
        videoId.matches('.*_' + request.auth.uid + '_.*') &&
        request.resource.size < 100 * 1024 * 1024 && // 100MB limit
        request.resource.contentType.matches('video/.*');
      
      // Allow delete if user owns the file
      allow delete: if request.auth != null && 
        videoId.matches('.*_' + request.auth.uid + '_.*');
    }
    
    // Showcase Thumbnails Rules
    match /showcase_thumbnails/{thumbnailId} {
      // Allow read if user is authenticated
      allow read: if request.auth != null;
      
      // Allow write if user is authenticated and follows naming convention
      allow write: if request.auth != null && 
        thumbnailId.matches('thumb_.*_' + request.auth.uid + '_.*') &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB limit
        request.resource.contentType.matches('image/.*');
      
      // Allow delete if user owns the file
      allow delete: if request.auth != null && 
        thumbnailId.matches('thumb_.*_' + request.auth.uid + '_.*');
    }
    
    // Profile Images Rules
    match /profile_images/{imageId} {
      // Allow read if user is authenticated
      allow read: if request.auth != null;
      
      // Allow write if user owns the file
      allow write: if request.auth != null && 
        imageId.matches('profile_' + request.auth.uid + '_.*') &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB limit
        request.resource.contentType.matches('image/.*');
      
      // Allow delete if user owns the file
      allow delete: if request.auth != null && 
        imageId.matches('profile_' + request.auth.uid + '_.*');
    }
  }
}
